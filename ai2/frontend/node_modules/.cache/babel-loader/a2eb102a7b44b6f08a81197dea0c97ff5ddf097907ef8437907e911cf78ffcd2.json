{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\z\\\\Music\\\\THK\\\\VSC\\\\AI2 F7\\\\ai2\\\\frontend\\\\src\\\\view\\\\updateGenre.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:3000\";\nexport default function UpdateGenre() {\n  _s();\n  const [Genre, setGenre] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const {\n    genreId\n  } = useParams();\n  useEffect(() => {\n    const url = baseUrl + \"/genre/get/\" + genreId;\n    axios.get(url).then(res => {\n      if (res.data.success) {\n        const data = res.data.data[0];\n        if (data) {\n          setGenre(data);\n          setDescription(data.description);\n        } else {\n          alert(\"Error web service\");\n        }\n      }\n    }).catch(error => {\n      alert(\"Error server: \" + error);\n    });\n  }, []);\n  function SendUpdate() {\n    const url = baseUrl + \"/genre/update/\" + genreId;\n    const datapost = {\n      description: Description\n    };\n    axios.put(url, datapost).then(response => {\n      if (response.data.success === true) {\n        alert(response.data.message);\n      } else {\n        alert(\"Error\");\n      }\n    }).catch(error => {\n      alert(\"Error 34: \" + error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputPassword4\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"\",\n          value: Description,\n          onChange: value => setDescription(value.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mt-2\",\n      onClick: () => SendUpdate(),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateGenre, \"Rl4kFc8NmP6rRaustZryDc8bixY=\", false, function () {\n  return [useParams];\n});\n_c = UpdateGenre;\nvar _c;\n$RefreshReg$(_c, \"UpdateGenre\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","baseUrl","UpdateGenre","_s","Genre","setGenre","Description","setDescription","genreId","url","get","then","res","data","success","description","alert","catch","error","SendUpdate","datapost","put","response","message","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/z/Music/THK/VSC/AI2 F7/ai2/frontend/src/view/updateGenre.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3000\";\r\n\r\nexport default function UpdateGenre() {\r\n  const [Genre, setGenre] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const { genreId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const url = baseUrl + \"/genre/get/\" + genreId;\r\n    axios.get(url)\r\n  .then(res => {\r\n        if (res.data.success) {\r\n          const data = res.data.data[0];\r\n          if (data) {\r\n            setGenre(data);\r\n            setDescription(data.description);\r\n          } else {\r\n            alert(\"Error web service\");\r\n          }\r\n        }\r\n      })\r\n  .catch(error => {\r\n        alert(\"Error server: \" + error);\r\n      });\r\n  }, []);\r\n\r\n  function SendUpdate() {\r\n    const url = baseUrl + \"/genre/update/\" + genreId;\r\n    const datapost = {\r\n        description: Description,\r\n    };\r\n    axios.put(url, datapost)\r\n   .then((response) => {\r\n        if (response.data.success === true) {\r\n            alert(response.data.message);\r\n        } else {\r\n            alert(\"Error\");\r\n        }\r\n    })\r\n   .catch((error)  => {\r\n        alert(\"Error 34: \" + error);\r\n    });\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-row justify-content-center\">\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputPassword4\">Description:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"\"\r\n            value={Description}\r\n            onChange={(value) => setDescription(value.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary mt-2\" onClick={() => SendUpdate()}>\r\n        Update\r\n      </button>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}